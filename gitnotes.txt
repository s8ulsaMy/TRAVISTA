git commands :

* CONFIGURING GIT

git config --global user.name "My name"

git config --global user.email "emailname"

git config --list  //it shows all the configuration details

* CLONE AND STATUS 

git clone <--! Link URL -->     //cloning a repository on a local machine

git status  //displays the state of the code

cd    // this command stands for change directory ...used for choosing specific file locations for terminal

ls   // it shows all the files present in the github repository

ls -a   // it shows the hidden files as well


* AHEAD OF FILE NAME (4 STAGES)

UNTRACKED (U)    --->  new files that git doesn't track   (files that are not present in github)

MODEIFIED (M)    ---> changed files (already present in the github)

STAGED    (A)    ---> file that is ready to be committed 

UNCHANGED  - Unmodified

* ADD AND COMMIT 

//now to add the files in the github , i.e from local machine to remote machine ...then we use these 2 steps

first  - - - >    add

git add <--!FILE NAME-->        //adds new or changed files tin your working directory to the git staging area

---------or---------- 

git add .      // for adding multiple files at once 

second - - - >    commit

git commit -m "some text"       //it is the record of the change 

* PUSH COMMAND : 

// to push your code (from local repo ) to the github (remote repo )

git push origin main 

here origin is the github repo name (where file ae being saved--- default)
and main is the branch name 

* INIT COMMAND     (if project is in the local machine and wants to add it to the git)
init - used to create a new repo in git

git init   - - - > to initialise the folder to the git

git remote add origin <-! link->      - - - > to add new remote (github repo)

git remote -v    - - - > (to verify remote)

git branch   - - - > to check the branch

git branch -M main    - - - > to rename branch

git push origin main  or  git push -u origin main (this is used to avoid writing whole syntax : after this by using git push ......only we can add it to the git)


* cd :
cd ..  - - - > (to get out of the specific folder)
mkdir "name of the sub directory" - - - > used to make sub directory in the folder

* WORKFLOW : - 

Github repo 
    |
    |
  clone
    |
    |
 changes
    |
    |
   add
    |
    |
  commit
    |
    |
   push


* BRANCHES : -
         
         P5 - - - - P6 - - - - - - - - - P7
        /                                 \  P8 (FINALLY MERGED TWO FEATURES)  
       /                                  /  
P1 - P2 - - - - - - - - - P3 - - - - - P4 

* BRANCH COMMANDS: -

git branch 

git branch -M main 

git checkout <-!new branch name->   - - - - > to navigate

git checkout -b <-!new branch name->  - - - - - > to create a new branch 

git branch -d <-!branch name->   - - - - - -> to delete a branch 

